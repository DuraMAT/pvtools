Todd Karin [9:36 AM]
joined #dash.

Todd Karin [9:38 AM]
I'm trying to deploy a dash app, as an lbl website. I was working with LBL SVM: https://commons.lbl.gov/display/itfaq/SVM+-+Virtual+Machine+Hosting
and apache, but I'm not able to get it live.
Do people have suggestions for favorite machine configurations (Ubuntu, CentOS, ...) or deployment services they find easy to use?

dwinston [9:47 AM]
Do you have a NERSC account? https://www.nersc.gov/users/data-analytics/spin/
nersc.gov
Spin
Spin is a new service platform at NERSC based on Docker container technology. It can be used to deploy web sites and science gateways, workflow managers, databases and key-value stores, and all sorts of network services that can access NERSC systems and storage on the back end.

computron [9:47 AM]
joined #dash.

computron [9:47 AM]
(All - FYI Todd is a postdoc in my group working on solar projects)
We can get Todd a NERSC account, but he doesn’t have one
(I think)

dwinston [9:48 AM]
We have https://viewer.materialsproject.org/ (a Dash app) deployed on Spin without issue

computron [9:48 AM]
I pointed Todd to NERSC Spin before, perhaps he can explain the LBL SVM route

dwinston [9:51 AM]
I see. I’ve never used LBL SVM. Spin does require embedding a “stack” in a Docker image. I believe the viewer uses Ubuntu and Gunicorn (rather than Apache) to serve. I’d recommend Gunicorn over Apache for simplicity.
Here is the viewer’s Dockerfile: https://github.com/materialsproject/crystaltoolkit/blob/master/Dockerfile
@Todd Karin I imagine this will be helpful as a template for deploying your Dash app anywhere (on a VM, you could simply step through the Dockerfile instructions and run through a Screen is you don’t wish to use Docker, though Docker has its benefits, and Dockerization is required by NERSC Spin)
*Screen if

Todd Karin [9:54 AM]
Thanks, that looks promising. Do you have a link to a web tutorial to set this up?

dwinston [9:55 AM]
If you can wait until late April, NERSC hosts workshops to get up and running with Spin: https://www.nersc.gov/users/data-analytics/spin/#spinup-workshop
nersc.gov
Spin
Spin is a new service platform at NERSC based on Docker container technology. It can be used to deploy web sites and science gateways, workflow managers, databases and key-value stores, and all sorts of network services that can access NERSC systems and storage on the back end.

mkhorton [9:57 AM]
I have a docker compose file suitable for deploying generic a Dash app on Spin, it’s very straight forward once you have the template. Spin training is required however

dwinston [9:57 AM]
If you go with an LBL SVM, you may want to run through https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04 (I find the Digital Ocean guides generally good) as deploying a Dash app is the same as deploying a Flask app
DigitalOcean
How To Serve Flask Applications with Gunicorn and Nginx on Ubuntu | DigitalOcean
In this guide, you will build a Python application using the Flask microframework on Ubuntu 18.04. The bulk of this article will be about how to set up the Gunicorn application server and how to launch the application and configure Nginx to act as a f
But I recommend Spin if possible so that you don’t have to do server maintenance

mkhorton [9:58 AM]
The file Donny linked is the Dockerfile, which is the minimum requirement and a good place to get started, the docker compose then includes a nginx reverse proxy, redis cache etc

Todd Karin [9:59 AM]
Do you know why one should choose docker vs SVM?

mkhorton [10:00 AM]
They’re not mutually exclusive

dwinston [10:00 AM]
They are not incompatible. You can run docker on SVM. Docker is good for having a self-contained, consistent, reproducible environment

mkhorton [10:00 AM]
(What Donny said)

dwinston [10:00 AM]
(bowing out for @mkhorton to take over this discussion :))
(lol)

mkhorton [10:01 AM]
Haha I’m on a flight so will be dropping off soon

dwinston [10:02 AM]
@mkhorton I noticed no `docker-compose.yml` in your repo. I’m sure that would help Todd get up and running sooner

mkhorton [10:02 AM]
Generally, once you’ve done the training, using Docker plus a deployment service like Spin is a lot less effort than maintaining your VM
Yeah it has a lot of Spin specific things in it
Maybe I should commit it anyway

dwinston [10:02 AM]
right, right

Todd Karin [10:03 AM]
Sorry, I'm new to this! I'm just looking for a suggestion of the easiest way to get my app up and running.

mkhorton [10:03 AM]
Or a few spin specific things, mostly related to https custom domains etc

dwinston [10:03 AM]
The “easiest” will be Spin, if you’re willing to wait to be officially trained

mkhorton [10:04 AM]
No worries. If you’re going to do a lot of this would definitely just attend the Spin training :) regardless of if you end up using Spin it should get you up to speed with modern deployment practices

dwinston [10:04 AM]
because NERSC staff will walk you through the process and will answer questions as they come up as you maintain the app

mkhorton [10:04 AM]
Yeah, the NERSC people are great

Todd Karin [10:04 AM]
okay, will do!

mkhorton [10:05 AM]
Also Spin is free at point of use it seems too? Not sure if that’ll be true long term

dwinston [10:05 AM]
right, no CPU hours are billed :slightly_smiling_face:

mkhorton [10:08 AM]
@dwinston if anyone ever needs to take a peak, the compose is in the matgen projectdir under /mkhorton/spin/crystal-toolkit (just for future ref)

shyamd [10:11 AM]
Another option
is AWS
the longest portion of that is getting Lab IT to put you onto the master payer contract
and then its pretty easy to build a pipeline that runs and autoscales a dash app
https://medium.com/@austinlasseter/plotly-dash-and-the-elastic-beanstalk-command-line-89fb6b67bb79
Medium
Plotly Dash and the Elastic Beanstalk Command Line
I recently started building dashboard for my python programs using the Dash framework by Plotly. Here are the steps I took to deploy a…
Reading time
4 min read
Jun 8th, 2018

mkhorton [10:12 AM]
Yeah, would still recommend Docker though even with AWS

shyamd [10:12 AM]
idk @jdagdelen had a bear of a time with deploying Docker containers to elastic beanstalk

shyamd [10:13 AM]
i think the isssue is that with the EB tool it does a lot of  the orchestration for you

mkhorton [10:13 AM]
Eh

shyamd [10:13 AM]
like setting up autoscaling

mkhorton [10:13 AM]
You can autoscale docker images..

shyamd [10:13 AM]
sure

mkhorton [10:13 AM]
You just have to make sure you write a good Dockerfile

shyamd [10:13 AM]
ok
with this you don’t have to do anything
you can just directly deploy a Flask based app to EB
and it takes care of the rest

mkhorton [10:14 AM]
I kinda like the portability / not getting tied down
Eg if we want to switch to Google cloud services or Azure one day

shyamd [10:14 AM]
sure

mkhorton [10:14 AM]
https://aws.amazon.com/docker/
Amazon Web Services, Inc.
What is Docker? | AWS
Docker is a software platform that allows you to build, test, and deploy applications quickly using containers. Learn about how Docker works, why and when to use Docker, and how to run containers on AWS.

shyamd [10:14 AM]
but if you want something “now”
with minimal effort

mkhorton [10:14 AM]
Yeah fair
Creates a kind of technical maintenance debt though (imo), if you just do ad hoc deployments
Something like @tschaume did with Fargate is great though (edited) 

Slackbot [10:15 AM]
:patrick-turtle:

shyamd [10:16 AM]
its like 75% of the way there

mkhorton [10:16 AM]
Yeah

Todd Karin [10:22 AM]
Okay, so it seems like you are suggesting a docker container for ease and portability. AWS elastic beanstalk would be good for deploying now, but some people have trouble with it. NERSC Spin would be best for getting up and running, but I have to wait to get trained.

jdagdelen [10:24 AM]
Heroku is also a great option for deploying dash apps online

Todd Karin [10:25 AM]
The app is pretty lightweight, but it needs to access around 100 Gb of data.

jdagdelen [10:25 AM]
Does it use that data all at once or is it querying a dataset with 100Gb?

Todd Karin [10:26 AM]
It queries about 5 mb for each user.

jdagdelen [10:27 AM]
We’ve done a lot of our stuff by connecting lightweight dash frontends to flask/mongodb backends.
If you put your 100Gb database into a mongodb server somewhere and then query it from your app, it could be pretty easy to get it off the ground.
If you have more complicated data fetching/processing that needs to happen first, a flask app can be a good wrapper for mongodb that acts similarly.
Heroku makes dash deployment from a github repo very straightforward.

Todd Karin [10:33 AM]
Is heroku a good long-term solution for increased traffic? I'd also like to eventually get a website like 'pvtools.lbl.gov', is this possible with a heroku deployment?

shyamd [10:35 AM]
(quick, easy deployment), (scaleable long term solution)
choose one

jdagdelen [10:36 AM]
I disagree with that
Maybe that used to be the case, but things seem to have come a long way
Heroku scales well
And they have solid autoscaling that will launch more dynos in parallel and route traffic to them if you have a lot of users.
https://devcenter.heroku.com/articles/scaling#autoscaling
devcenter.heroku.com
Scaling Your Dyno Formation | Heroku Dev Center
Each app on Heroku has a set of running dynos, its dyno formation, which can be scaled up or down instantly from the command line or dashboard.
The only drawback of heroku is you are paying about 2-3x the cost of just setting up the same servers on AWS and running your application on them.
If you don’t want to use a performance dynos but still want something that autoscales, you can implement that with the command line tools. I suspect they’ll add autoscaling to more products in the future though.
pvtools.lbl.gov doesn’t seem to be working for me.

Todd Karin [10:45 AM]
Me either. That's precisely the reason why I'm here. :slightly_smiling_face:

jdagdelen [10:45 AM]
Oh, i understand. You want that domain to point to your app?

Todd Karin [10:45 AM]
Yes.

jdagdelen [10:45 AM]
I thought you were showing off an example app
Yeah, that’s no problem.
You just would point the dns at it.

Todd Karin [10:47 AM]
Is there a tutorial that shows how to do this?

jdagdelen [10:48 AM]
I’m not sure who controls the .lbl.gov domains,
but for an example, here’s how to do it with a domain from google domains.
https://medium.com/@david.gagne/set-up-a-custom-domain-for-your-heroku-application-using-google-domains-guaranteed-a2b2ff934f97
Medium
Link your Heroku App to custom Google Domain…Finally.
Backstory
Reading time
2 min read
Nov 6th, 2017
Whoever is responsible at lbl for assigning domains at that extension will be able to do it very easily though (assuming they’re okay with a subdomain of lbl.gov pointing to a Heroku app.)

mkhorton [11:25 AM]
We have custom domains on Spin
Also scales easily
Also free
Not sure you’ll get an lbl.gov one though
EC2 is also a good option
I echo @jdagdelen ‘s comments on Heroku

shyamd [11:26 AM]
you’ll need to submit a CNAME request your LBL IT

mkhorton [11:27 AM]
Docker based deployments are super easy once you know Docker though (fairly tautological I know), whatever platform you host on

shyamd [11:27 AM]
https://iprequest.lbl.gov/iprequest/

shyamd [11:33 AM]
go back to vacation @mkhorton